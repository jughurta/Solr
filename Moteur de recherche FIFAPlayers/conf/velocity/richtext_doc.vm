#**
 *  Render a complex document in the results list
 *#

## Load Mime-Type List and Mapping
#parse('mime_type_lists.vm')
## Sets:
## * supportedMimeTypes, AKA supportedtypes
## * mimeExtensionsMap, AKA extMap

## Title
#if($doc.getFieldValue('Nom'))
  #set($title = $esc.html($doc.getFirstValue('Nom')))
#else
  #set($title = "["+$doc.getFieldValue('ID')+"]")
#end

## URL
#if($doc.getFieldValue('Photo'))
  #set($url = $doc.getFieldValue('Photo'))
#elseif($doc.getFieldValue('Logo_club'))
  #set($url = "file:///$doc.getFieldValue('Logo_club')")
#else
  #set($url = "$doc.getFieldValue('ID')")
#end

## Sort out Mime-Type
#set($ct = $list.get($doc.getFirstValue('content_type').split(";"),0))
#set($filename = $doc.getFieldValue('resourcename'))
#set($filetype = false)
#set($filetype = $mimeExtensionsMap.get($ct))

## TODO: falling back to file extension is convenient,
## except when you don't have an icon for that extension
## example "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
## document with a .docx extension.
## It'd be nice to fall back to an "unknown" or the existing "file" type
## We sort of do this below, but only if the filename has no extension
## (anything after the last dot).

#if(!$filetype)
  #set($filetype = $filename.substring($filename.lastIndexOf(".")).substring(1))
#end

## #if(!$filetype)
##   #set($filetype = "file")
## #end
## #if(!$supportedMimeTypes.contains($filetype))
##   #set($filetype = "file")
## #end



## auteur
#if($doc.getFieldValue('Nom'))
  <div>
    <b><i>Nom du Joueur</i></b>: #field('Nom')
  </div>
#end

## titre
#if($doc.getFieldValue('Club'))
  <div>
    <b><i>Club</i></b>: #field('Club')
  </div>
#end

## mots_cles
#if($doc.getFieldValue('Nationalite'))
  <div>
    <b><i>mots_cles</i></b>: #field('Nationalite')
  </div>
#end

## contenu
#if($doc.getFieldValue('contenu'))
  <div>
    <b><i>contenu</i></b>: #field('contenu')
  </div>
#end


#parse('debug.vm')
